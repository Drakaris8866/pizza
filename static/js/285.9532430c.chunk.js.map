{"version":3,"file":"static/js/285.9532430c.chunk.js","mappings":"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","sources":["components/PizzaBlock/PizzaLoader.tsx","webpack://pizza/./src/components/Pagination/pagination.module.scss?485f","components/Pagination/index.tsx","components/Categories.tsx","components/Sort.tsx","components/PizzaBlock/PizzaBlock.tsx","components/Pages/Home.tsx"],"sourcesContent":["import React, {FC} from \"react\"\r\n\r\nimport ContentLoader from \"react-content-loader\"\r\n\r\nconst PizzaLoader: FC = () => (\r\n    <ContentLoader\r\n        speed={2}\r\n        width={280}\r\n        height={450}\r\n        viewBox=\"0 0 280 450\"\r\n        backgroundColor=\"#f3f3f3\"\r\n        foregroundColor=\"#ecebeb\"\r\n        className=\"pizza-block\"\r\n    >\r\n        <circle cx=\"120\" cy=\"120\" r=\"120\"/>\r\n        <rect x=\"0\" y=\"250\" rx=\"0\" ry=\"0\" width=\"280\" height=\"20\"/>\r\n        <rect x=\"0\" y=\"280\" rx=\"0\" ry=\"0\" width=\"280\" height=\"80\"/>\r\n        <rect x=\"0\" y=\"374\" rx=\"0\" ry=\"0\" width=\"90\" height=\"64\"/>\r\n        <rect x=\"98\" y=\"374\" rx=\"0\" ry=\"0\" width=\"184\" height=\"64\"/>\r\n    </ContentLoader>\r\n)\r\n\r\nexport default PizzaLoader","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pagination_root__y93YH\"};","import ReactPaginate from \"react-paginate\";\r\n\r\nimport styles from './pagination.module.scss'\r\nimport {FC} from \"react\";\r\n\r\ntype PaginationProps = {\r\n    currentPage: number,\r\n    onChangePage: (page: number) => void\r\n}\r\n\r\nconst index: FC<PaginationProps> = ({currentPage, onChangePage}) => {\r\n    return (\r\n        <ReactPaginate\r\n            className={styles.root}\r\n            breakLabel=\"...\"\r\n            nextLabel=\">\"\r\n            onPageChange={(e) => onChangePage(e.selected + 1)}\r\n            pageRangeDisplayed={4}\r\n            pageCount={3}\r\n            forcePage={currentPage - 1}\r\n            previousLabel=\"<\"\r\n        />\r\n    );\r\n}\r\n\r\nexport default index;","import React, {FC} from \"react\";\r\n\r\ntype CategoriesProps = {\r\n    activeCategory: number,\r\n    onChangeCategory: (index: number) => void\r\n}\r\n\r\nconst Categories: FC<CategoriesProps> = ({activeCategory, onChangeCategory}) => {\r\n\r\n    const categories = [\r\n        'Все',\r\n        'Мясные',\r\n        'Вегетарианская',\r\n        'Гриль',\r\n        'Острые',\r\n        'Закрытые',\r\n    ]\r\n\r\n\r\n    return <div className=\"categories\">\r\n        <ul>\r\n            {\r\n                categories.map((category, index) => <li key={index + category} onClick={() => onChangeCategory(index)}\r\n                                                        className={activeCategory === index ? \"active\" : ''}>{category}</li>)\r\n            }\r\n        </ul>\r\n    </div>;\r\n}\r\nexport default React.memo(Categories)","import React, {FC} from \"react\";\r\n\r\ntype SortProps = {\r\n    sortBy: number,\r\n    onChangeSortBy: (index: number) => void\r\n}\r\n\r\ntype M = MouseEvent & {\r\n    path: Node[];\r\n}\r\n\r\nconst Sort: FC<SortProps> =({sortBy, onChangeSortBy}) => {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const sortRef = React.useRef<HTMLDivElement>(null)\r\n\r\n    const sortCategory = [\"популярности\", \"цене\", \"алфавиту\"]\r\n\r\n    const handleSortClick = (index: number) => {\r\n        onChangeSortBy(index)\r\n        setOpen(false)\r\n    }\r\n\r\n    function handleClick(e: MouseEvent) {\r\n        const _e = e as M\r\n        if (sortRef.current && !_e.path.includes(sortRef.current)) {\r\n            setOpen(false)\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        document.body.addEventListener(\"click\", (e) => {\r\n            handleClick(e)\r\n        })\r\n        return () => {\r\n            document.body.removeEventListener(\"click\", (e) => {\r\n                handleClick(e)\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div ref={sortRef} className=\"sort\">\r\n            <div onClick={() => setOpen(!open)} className=\"sort__label\">\r\n                <svg\r\n                    width=\"10\"\r\n                    height=\"6\"\r\n                    viewBox=\"0 0 10 6\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    className={`${open ? \"active\" : ''}`}\r\n                >\r\n                    <path\r\n                        d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n                        fill=\"#2C2C2C\"\r\n                    />\r\n                </svg>\r\n                <b>Сортировка по:</b>\r\n                <span>{sortCategory[sortBy]}</span>\r\n            </div>\r\n            <div className={`sort__popup ${open && \"_active\"}`}>\r\n                <ul>\r\n                    {sortCategory.map((item, index) => <li className={`${sortBy === index && \"active\"}`} key={index}\r\n                                                           onClick={() => handleSortClick(index)}>{item}</li>)}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Sort)","import React, {FC, useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {addItem} from \"../../store/Cart/slice\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {RootState, useAppDispatch} from \"../../store/store\";\r\nimport {CartItem} from \"../../store/Cart/types\";\r\nimport {PizzaItem} from \"../../store/Pizza/types\";\r\n\r\n\r\n\r\nconst PizzaBlock: FC<PizzaItem> = ({id, title, imageUrl, price, sizes, types}) => {\r\n\r\n    const [activeType, setActiveType] = useState(0)\r\n    const [activeSize, setActiveSize] = useState(0)\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n\r\n    const pizzasTypes = [\"тонкое\", \"традиционное\"]\r\n    const pizzasSizes = [26, 30, 40]\r\n\r\n    const currentSize = pizzasSizes[activeSize]\r\n    const currentType = pizzasTypes[activeType]\r\n\r\n\r\n    const handleAddClick = () => {\r\n        const item: CartItem = {\r\n            id,\r\n            title,\r\n            imageUrl,\r\n            price,\r\n            currentType,\r\n            currentSize,\r\n            count: 0\r\n        }\r\n\r\n        dispatch(addItem(item))\r\n    }\r\n\r\n    const cartItem = useSelector((state: RootState) => state.cart.items.find((obj => obj.id === id)))\r\n\r\n    const addedCount = cartItem ? cartItem.count : 0\r\n\r\n\r\n    return (\r\n        <div className=\"pizza-block\">\r\n            <Link to={`pizza/${id}`}>\r\n                <img\r\n                    className=\"pizza-block__image\"\r\n                    src={imageUrl}\r\n                    alt=\"Pizza\"\r\n                />\r\n            </Link>\r\n            <h4 className=\"pizza-block__title\">{title}</h4>\r\n            <div className=\"pizza-block__selector\">\r\n                <ul>\r\n                    {\r\n                        types.map((typeId, index) => <li key={index}\r\n                                                         className={activeType === index ? \"active\" : \"\"}\r\n                                                         onClick={() => setActiveType(index)}>{pizzasTypes[Number(typeId)]}</li>)\r\n                    }\r\n                </ul>\r\n                <ul>\r\n                    {sizes.map((size, index) => <li className={activeSize === index ? \"active\" : \"\"}\r\n                                                    onClick={() => setActiveSize(index)} key={size}>{size}</li>)}\r\n                </ul>\r\n            </div>\r\n            <div className=\"pizza-block__bottom\">\r\n                <div className=\"pizza-block__price\">от {price} ₽</div>\r\n                <div onClick={handleAddClick} className=\"button button--outline button--add\">\r\n                    <svg\r\n                        width=\"12\"\r\n                        height=\"12\"\r\n                        viewBox=\"0 0 12 12\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\r\n                            fill=\"white\"\r\n                        />\r\n                    </svg>\r\n                    <span>Добавить</span>\r\n                    <i>{addedCount}</i>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n}\r\n export default React.memo(PizzaBlock)","import PizzaLoader from \"../PizzaBlock/PizzaLoader\";\r\nimport React, {FC} from \"react\";\r\nimport Pagination from \"../Pagination\";\r\nimport {useSelector} from \"react-redux\";\r\nimport qs from 'qs'\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {RootState, useAppDispatch} from \"../../store/store\";\r\nimport {setCategory, setCurrentPage, setFilters, setSortBy} from \"../../store/Filter/slice\";\r\nimport {IParams} from \"../../store/Pizza/types\";\r\nimport {fetchPizzas} from \"../../store/Pizza/async\";\r\nimport Categories from \"../Categories\";\r\nimport Sort from \"../Sort\";\r\nimport PizzaBlock from \"../PizzaBlock/PizzaBlock\";\r\n\r\nconst Home: FC = () => {\r\n\r\n    const dispatch = useAppDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const warSearch = React.useRef(false)\r\n    const isMounted = React.useRef(false)\r\n\r\n    const {items, statusOfLoading} = useSelector(({pizzas}: RootState) => pizzas)\r\n    const {activeCategory, sortBy, currentPage} = useSelector(({filter}: RootState) => filter)\r\n    const {searchInputValue} = useSelector(({search}: RootState) => search)\r\n\r\n    React.useEffect(() => {\r\n        if (window.location.search) {\r\n            const params = qs.parse(window.location.search.substring(1))\r\n            dispatch(setFilters({...params}))\r\n            warSearch.current = true\r\n        }\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        if (!warSearch.current) {\r\n            getPizzas()\r\n        }\r\n        warSearch.current = false\r\n    }, [activeCategory, sortBy, searchInputValue, currentPage])\r\n\r\n    React.useEffect(() => {\r\n        if (isMounted.current) {\r\n            const queryStr = qs.stringify({\r\n                activeCategory,\r\n                sortBy,\r\n                currentPage\r\n            })\r\n            navigate(`?${queryStr}`)\r\n        }\r\n        isMounted.current = true\r\n    }, [activeCategory, sortBy, searchInputValue, currentPage])\r\n\r\n    const getPizzas = () => {\r\n        const sortCategory = activeCategory === 0 ? 'category' : `category=${activeCategory}`\r\n        const search = searchInputValue ? searchInputValue.toLowerCase() : ''\r\n        const pagination = activeCategory === 0 ? `page=${currentPage}&limit=4&` : ''\r\n\r\n        const fetchSelectedSortBy = () => {\r\n            if (sortBy === 0) {\r\n                return 'sortBy=rating&order=desc'\r\n            } else if (sortBy === 1) {\r\n                return 'sortBy=price&order=desc'\r\n            } else return 'sortBy=title&order=desc'\r\n        }\r\n\r\n        const params: IParams = {\r\n            sortCategory,\r\n            search,\r\n            pagination,\r\n            fetchSelectedSortBy,\r\n            searchInputValue\r\n        }\r\n        dispatch(fetchPizzas(params))\r\n    }\r\n\r\n    const onChangeCategory = (index: number) => {\r\n        dispatch(setCategory(index))\r\n    }\r\n    const onChangeSortBy = (index: number) => {\r\n        dispatch(setSortBy(index))\r\n    }\r\n    const onChangePage = (page: number) => {\r\n        dispatch(setCurrentPage(page))\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"container\">\r\n                <div className=\"content__top\">\r\n                    <Categories onChangeCategory={onChangeCategory} activeCategory={activeCategory}/>\r\n                    <Sort onChangeSortBy={onChangeSortBy} sortBy={sortBy}/>\r\n                </div>\r\n                <h2 className=\"content__title\">Все пиццы</h2>\r\n                <div className=\"content__items\">\r\n                    {\r\n                        statusOfLoading !== \"loading\" ? items.map((pizza, index) => <PizzaBlock\r\n                            key={index + pizza.title} {...pizza}/>) : [...new Array(10)].map((el, index) => <PizzaLoader\r\n                            key={index}/>)\r\n                    }\r\n                </div>\r\n                <Pagination currentPage={currentPage} onChangePage={onChangePage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;"],"names":["speed","width","height","viewBox","backgroundColor","foregroundColor","className","cx","cy","r","x","y","rx","ry","currentPage","onChangePage","styles","breakLabel","nextLabel","onPageChange","e","selected","pageRangeDisplayed","pageCount","forcePage","previousLabel","Categories","activeCategory","onChangeCategory","map","category","index","onClick","React","Sort","sortBy","onChangeSortBy","open","setOpen","sortRef","sortCategory","handleClick","_e","current","path","includes","document","body","addEventListener","removeEventListener","ref","fill","xmlns","d","item","handleSortClick","PizzaBlock","id","title","imageUrl","price","sizes","types","useState","activeType","setActiveType","activeSize","setActiveSize","dispatch","useAppDispatch","pizzasTypes","currentSize","currentType","cartItem","useSelector","state","cart","items","find","obj","addedCount","count","to","src","alt","typeId","Number","size","addItem","navigate","useNavigate","warSearch","isMounted","pizzas","statusOfLoading","filter","searchInputValue","search","window","location","params","qs","substring","setFilters","getPizzas","queryStr","toLowerCase","pagination","fetchSelectedSortBy","fetchPizzas","setCategory","setSortBy","pizza","Array","el","Pagination","page","setCurrentPage"],"sourceRoot":""}